name: IPFS Upload + Update ENS

on:
  push:
    branches: [ main ]
    # Nếu muốn upload khi đổi file khác, thêm vào đây
    paths:
      - "index.html"
      - ".github/workflows/deploy.yml"
  workflow_dispatch: {}  # Cho phép chạy tay

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOMAIN: lightunfold.eth
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Upload file lên Pinata (API v2 pinFileToIPFS) bằng JWT
      - name: Pin index.html to Pinata
        id: pin
        run: |
          if [ ! -f index.html ]; then
            echo "Không tìm thấy index.html ở thư mục gốc repo"; exit 1;
          fi

          # Gọi Pinata với JWT
          RESP=$(curl -s -X POST "https://api.pinata.cloud/pinning/pinFileToIPFS" \
            -H "Authorization: Bearer $PINATA_JWT" \
            -H "Accept: application/json" \
            -F "file=@index.html;type=text/html" \
            -F "pinataMetadata={\"name\":\"${{ github.repository }}-${{ github.run_number }}\"};type=application/json")

          echo "Phản hồi Pinata: $RESP"
          CID=$(echo "$RESP" | jq -r '.IpfsHash')
          if [ -z "$CID" ] || [ "$CID" = "null" ]; then
            echo "Không lấy được CID từ Pinata"; exit 1;
          fi
          echo "cid=$CID" >> "$GITHUB_OUTPUT"
        env:
          PINATA_JWT: ${{ secrets.PINATA_JWT }}

      # 2) Cập nhật ENS contenthash = ipfs://<CID>
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm i ethers@6 content-hash@3

      - name: Update ENS contenthash
        env:
          RPC_URL: ${{ secrets.RPC_URL }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          DOMAIN: ${{ env.DOMAIN }}
          CID: ${{ steps.pin.outputs.cid }}
        run: |
          node - <<'NODE'
          import { ethers } from "ethers";
          import contentHash from "content-hash";

          const rpc = process.env.RPC_URL;
          const pk  = process.env.PRIVATE_KEY;
          const domain = process.env.DOMAIN;
          const cid = process.env.CID;

          if(!rpc || !pk) { throw new Error("Thiếu RPC_URL hoặc PRIVATE_KEY"); }
          if(!cid)       { throw new Error("Thiếu CID từ bước pin"); }

          // ENS registry mainnet
          const ENS_REGISTRY = "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e";
          const REG_ABI = [
            "function resolver(bytes32 node) view returns (address)"
          ];
          const RES_ABI = [
            "function setContenthash(bytes32 node, bytes calldata hash) external"
          ];

          const provider = new ethers.JsonRpcProvider(rpc);
          const wallet   = new ethers.Wallet(pk, provider);

          // Tính namehash
          const node = ethers.namehash(domain);

          // Lấy địa chỉ resolver hiện tại
          const reg = new ethers.Contract(ENS_REGISTRY, REG_ABI, provider);
          const resolverAddr = await reg.resolver(node);
          if(resolverAddr === ethers.ZeroAddress) {
            throw new Error("Tên ENS chưa có resolver. Hãy đặt Public Resolver trong app.ens.domains (Records → Resolver).");
          }

          // Mã hoá ipfs CID -> bytes contenthash theo EIP-1577
          const ch = "0x" + contentHash.fromIpfs(cid);

          // Gọi setContenthash
          const resolver = new ethers.Contract(resolverAddr, RES_ABI, wallet);
          const tx = await resolver.setContenthash(node, ch);
          console.log("Gửi giao dịch cập nhật contenthash:", tx.hash);
          await tx.wait();
          console.log("Đã cập nhật contenthash -> ipfs://"+cid);
          NODE

      - name: Summary
        run: |
          echo "✅ Đã pin lên IPFS: ipfs://${{ steps.pin.outputs.cid }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Đã cập nhật ENS: ${{ env.DOMAIN }}" >> $GITHUB_STEP_SUMMARY
