name: "HYPERCORE v3"

on:
  schedule:
    - cron: "*/5 * * * *"     # quét mỗi 5 phút (UTC)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: hypercore-build
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - uses: actions/checkout@v4
        with: { persist-credentials: true }

      - uses: actions/setup-node@v4
        with: { node-version: "20" }

      - name: Build site + data + feeds + PWA
        shell: bash
        run: |
          node - <<'NODE'
          import fs from 'fs';
          import path from 'path';

          // ----------------- helpers -----------------
          const sleep = (ms)=>new Promise(r=>setTimeout(r,ms));
          const nowISO = ()=>new Date().toISOString();
          const slug = s => (s||'').toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g,"").replace(/[^a-z0-9]+/g,'-').replace(/^-+|-+$/g,'');

          function readConfig() {
            const names = ["config.json","cấu hình.json","cau hinh.json"];
            for (const n of names) if (fs.existsSync(n)) return JSON.parse(fs.readFileSync(n,'utf8'));
            // defaults an toàn
            return {
              site:{ brand:"LightUnfold • Web3 AI X1000", ens:"lightunfold.eth",
                     tagline:"20,000+ AI • 200+ quốc gia • 200+ ngôn ngữ • tự động 24/7 • chuyển đổi X1000",
                     payments:{}, affiliates:[] },
              ui:{ theme:"dark", currency:"USD", price_digits:6, qr_size:260 },
              feeds:{ top_n:20, sources:["coingecko_markets","coinlore_tickers"] },
              schedule:{ refresh_minutes:5 },
              growth:{ rss:true, sitemap:true, share_buttons:["x","telegram"], referral_param:"ref", default_ref:"lightunfold" },
              analytics:{}, push:{ enabled:false }, pwa:{ enabled:true, name:"LightUnfold X1000", short_name:"X1000" }
            };
          }
          const cfg = readConfig();

          async function safeGet(url,{retries=3,backoff=800,timeout=10000,headers={}}={}) {
            for(let i=0;i<retries;i++){
              const ctrl = new AbortController();
              const to = setTimeout(()=>ctrl.abort(),timeout);
              try{
                const res = await fetch(url,{headers:{ "User-Agent":"HyperCore/1.0", "Accept":"application/json", ...headers }, signal:ctrl.signal});
                clearTimeout(to);
                if(!res.ok) throw new Error(res.status+" "+res.statusText);
                return await res.json();
              }catch(e){
                if(i===retries-1) throw e;
                await sleep(backoff*(i+1));
              }
            }
          }

          // ----------------- sources -----------------
          const sources = {
            coingecko_markets: async ()=>{
              const url="https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=volume_desc&per_page=50&page=1&price_change_percentage=1h,24h,7d";
              return await safeGet(url);
            },
            coinlore_tickers: async ()=>{
              const j = await safeGet("https://api.coinlore.net/api/tickers/?start=0&limit=50");
              return j?.data||[];
            },
            cmc_toplist: async ()=>{
              // nguồn công khai hạn chế -> fallback rỗng nếu lỗi
              try{ return (await safeGet("https://api.coinlore.net/api/tickers/?start=0&limit=50")).data||[] }catch(_){ return [] }
            },
            dexscreener_trending: async ()=>{
              try{
                const j = await safeGet("https://api.dexscreener.com/latest/dex/search?q=trending");
                return j?.pairs||[];
              }catch(_){ return [] }
            }
          };

          // ----------------- scoring -----------------
          const scoreCG = c =>
            (Number(c.price_change_percentage_1h_in_currency)||0)*0.40 +
            (Number(c.price_change_percentage_24h_in_currency)||0)*0.35 +
            (Number(c.price_change_percentage_7d_in_currency)||0)*0.25 +
            Math.log10((Number(c.total_volume)||1));

          const scoreCL = c => (Number(c.percent_change_24h)||0)*0.70 + Math.log10((Number(c.volume24)||1));

          // ----------------- compose -----------------
          async function compose(){
            const wanted = (cfg?.feeds?.sources?.length?cfg.feeds.sources:["coingecko_markets"]);
            let items=[];
            for(const key of wanted){
              try{
                const data = await (sources[key]?.());
                if(!data) continue;
                if(key==="coingecko_markets"){
                  items.push(...data.map(c=>({
                    src:"coingecko", id:c.id, symbol:(c.symbol||"").toUpperCase(), name:c.name,
                    price:Number(c.current_price)||0,
                    ch1h:Number(c.price_change_percentage_1h_in_currency)||0,
                    ch24h:Number(c.price_change_percentage_24h_in_currency)||0,
                    ch7d:Number(c.price_change_percentage_7d_in_currency)||0,
                    vol24h:Number(c.total_volume)||0,
                    score:scoreCG(c),
                    link:`https://www.coingecko.com/en/coins/${c.id}`
                  })));
                }
                if(key==="coinlore_tickers"||key==="cmc_toplist"){
                  items.push(...data.map(c=>({
                    src:"coinlore",
                    id:c.id, symbol:(c.symbol||"").toUpperCase(), name:c.name,
                    price:Number(c.price_usd||c.price||0)||0,
                    ch24h:Number(c.percent_change_24h||c.change24h||0)||0,
                    vol24h:Number(c.volume24||c.volume||0)||0,
                    score:scoreCL(c),
                    link:`https://www.coinlore.com/coin/${(c.name||"").toLowerCase().replace(/\s+/g,"-")}`
                  })));
                }
                if(key==="dexscreener_trending"){
                  items.push(...data.map(p=>({
                    src:"dexscreener",
                    id:p.pairAddress, symbol:(p.baseToken?.symbol||"").toUpperCase(), name:p.baseToken?.name||p.baseToken?.symbol,
                    price:Number(p.priceUsd)||0,
                    ch24h:Number(p.priceChange?.h24||0)||0,
                    vol24h:Number(p.volume?.h24||0)||0,
                    score:(Number(p.priceChange?.h24||0))*0.6 + Math.log10((Number(p.volume?.h24)||1)),
                    link:`https://dexscreener.com/${p.chainId||''}/${p.pairAddress||''}`
                  })));
                }
              }catch(e){
                console.warn("source-error", key, String(e).slice(0,140));
              }
            }
            // dedupe by symbol → highest score
            const best={};
            for(const it of items){
              if(!it.symbol) continue;
              const k=it.symbol;
              if(!best[k] || it.score>best[k].score) best[k]=it;
            }
            const out = Object.values(best).sort((a,b)=>b.score-a.score).slice(0, Number(cfg?.feeds?.top_n)||20);
            return out;
          }

          const items = await compose();

          // ----------------- write data -----------------
          fs.mkdirSync("data",{recursive:true});
          const payload = { generated_at:nowISO(), brand:cfg?.site?.brand||"AI X1000", items };
          fs.writeFileSync("data/latest.json", JSON.stringify(payload,null,2));
          fs.writeFileSync("data/summary.txt", "🔥 TOP: " + items.map(x=>`${x.symbol}: $${x.price} (${(x.ch24h??0).toFixed(2)}%)`).join(" | "));
          fs.writeFileSync("data/heartbeat.txt", nowISO());

          // ----------------- affiliates redirects -----------------
          const affiliates = cfg?.site?.affiliates||[];
          const refParam = cfg?.growth?.referral_param||"ref";
          const defaultRef = cfg?.growth?.default_ref||"lightunfold";
          fs.mkdirSync("r",{recursive:true});
          for(const a of affiliates){
            const s = slug(a.name||"link");
            const u = new URL(a.url);
            if(!u.searchParams.get(refParam)) u.searchParams.set(refParam, defaultRef);
            const html = `<!doctype html><meta charset="utf-8"><meta http-equiv="refresh" content="0;url=${u.toString()}"><title>${a.name||"Go"}</title><a href="${u.toString()}">Redirecting…</a>`;
            fs.writeFileSync(`r/${s}.html`, html);
          }

          // ----------------- RSS -----------------
          if(cfg?.growth?.rss){
            const rssItems = items.map(x=>`
              <item>
                <title>${x.symbol} · $${x.price}</title>
                <link>${x.link}</link>
                <guid>${x.src}:${x.id}</guid>
                <pubDate>${new Date().toUTCString()}</pubDate>
                <description><![CDATA[ ${x.symbol} — $${x.price} • 24h ${(x.ch24h??0).toFixed(2)}% • Vol ${x.vol24h} ]]></description>
              </item>`).join("\n");
            const rss = `<?xml version="1.0" encoding="UTF-8"?>
              <rss version="2.0"><channel>
                <title>${cfg?.site?.brand||"AI X1000"}</title>
                <link>https://vuhuyphat.github.io/</link>
                <description>${cfg?.site?.tagline||""}</description>
                ${rssItems}
              </channel></rss>`;
            fs.writeFileSync("feed.xml", rss);
          }

          // ----------------- sitemap -----------------
          if(cfg?.growth?.sitemap){
            const base="https://vuhuyphat.github.io";
            const urls=[
              `${base}/`,
              `${base}/data/latest.json`,
              `${base}/feed.xml`
            ];
            for(const a of affiliates) urls.push(`${base}/r/${slug(a.name)}.html`);
            const sm = `<?xml version="1.0" encoding="UTF-8"?><urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">`+
              urls.map(u=>`<url><loc>${u}</loc><lastmod>${nowISO()}</lastmod></url>`).join("")+
              `</urlset>`;
            fs.writeFileSync("sitemap.xml", sm);
          }

          // ----------------- PWA manifest + SW -----------------
          const icon192 = "iVBORw0KGgoAAAANSUhEUgAAAMAAAADAAAABAAAC..."; // (rút gọn) icon PNG base64 nhỏ
          const icon512 = icon192;
          const manifest = {
            name: cfg?.pwa?.name||"LightUnfold X1000",
            short_name: cfg?.pwa?.short_name||"X1000",
            theme_color: "#0b0f13",
            background_color: "#0b0f13",
            start_url: "/",
            scope: "/",
            display: "standalone",
            icons: [
              { src: "/data/icon-192.png", sizes: "192x192", type: "image/png" },
              { src: "/data/icon-512.png", sizes: "512x512", type: "image/png" }
            ]
          };
          fs.writeFileSync("manifest.webmanifest", JSON.stringify(manifest,null,2));
          // ghi icon mẫu (nếu chưa có)
          const writeB64 = (p,b64)=>{ if(!fs.existsSync(p)) fs.writeFileSync(p, Buffer.from(b64,'base64')); };
          writeB64("data/icon-192.png", icon192);
          writeB64("data/icon-512.png", icon512);

          const sw = `self.addEventListener('install',e=>{e.waitUntil(caches.open('x1000-v1').then(c=>c.addAll(['/','/data/latest.json','/manifest.webmanifest'])))});self.addEventListener('fetch',e=>{e.respondWith(caches.match(e.request).then(r=>r||fetch(e.request)))})`;
          fs.writeFileSync("sw.js", sw);

          // ----------------- index.html (UI + SEO) -----------------
          const brand = cfg?.site?.brand||"LightUnfold • Web3 AI X1000";
          const ens = cfg?.site?.ens||"lightunfold.eth";
          const tagline = cfg?.site?.tagline||"Trang Web3 AI tự động 24/7";
          const seoTitle = cfg?.site?.seo?.title || brand;
          const seoDesc  = cfg?.site?.seo?.description || tagline;
          const ogImg    = cfg?.site?.seo?.image || "https://vuhuyphat.github.io/data/og.png";
          const pay = cfg?.site?.payments||{};
          const qr = (t,v)=>`https://api.qrserver.com/v1/create-qr-code/?size=260x260&data=${encodeURIComponent(v)}`;

          const topHTML = items.map(x=>`
              <div class="row coin">
                <div class="sym">${x.symbol}</div>
                <div class="p">$${x.price.toFixed(6)}</div>
                <div class="c ${(x.ch24h||0)>=0?'up':'dn'}">${(x.ch24h||0).toFixed(2)}%</div>
                <a class="lnk" href="${x.link}" target="_blank">Xem</a>
              </div>`).join("");

          const affHTML = affiliates.map(a=>{
            const s = slug(a.name);
            return `<a class="tag" href="/r/${s}.html" target="_blank">${a.name}</a>`;
          }).join("");

          const payHTML = `
            ${pay.eth?`<div class="pay"><h4>ETH (EVM)</h4><img src="${qr('eth',pay.eth)}"><div class="addr">${pay.eth}</div></div>`:''}
            ${pay.usdt_erc20?`<div class="pay"><h4>USDT (ERC20)</h4><img src="${qr('usdt',pay.usdt_erc20)}"><div class="addr">${pay.usdt_erc20}</div></div>`:''}
            ${pay.momo?`<div class="pay"><h4>MoMo</h4><img src="${qr('momo',pay.momo)}"><div class="addr">${pay.momo}</div></div>`:''}
            ${pay.vietcombank?`<div class="pay"><h4>Vietcombank</h4><img src="${qr('vcb',pay.vietcombank)}"><div class="addr">${pay.vietcombank}</div></div>`:''}
            ${pay.paypal?`<div class="pay"><h4>PayPal</h4><a class="btn" href="https://paypal.me/${encodeURIComponent(pay.paypal.split('@')[0])}" target="_blank">PayPal</a><div class="addr">${pay.paypal}</div></div>`:''}
          `;

          const onesignal = (cfg?.push?.enabled && cfg?.push?.onesignal_app_id) ? `
            <script src="https://cdn.onesignal.com/sdks/OneSignalSDK.js" async></script>
            <script>window.OneSignalDeferred=window.OneSignalDeferred||[];OneSignalDeferred.push(function(OneSignal){OneSignal.init({appId:"${cfg.push.onesignal_app_id}"});});</script>
          ` : ``;

          const plausible = (cfg?.analytics?.plausible_domain) ? `
            <script defer data-domain="${cfg.analytics.plausible_domain}" src="https://plausible.io/js/plausible.js"></script>
          ` : ``;

          const html = `<!doctype html>
          <html lang="vi"><head>
            <meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
            <title>${seoTitle}</title><meta name="description" content="${seoDesc}">
            <meta property="og:title" content="${seoTitle}"><meta property="og:description" content="${seoDesc}"><meta property="og:image" content="${ogImg}">
            <link rel="manifest" href="/manifest.webmanifest"><link rel="icon" href="/data/icon-192.png">
            <meta name="theme-color" content="#0b0f13">
            <script>if('serviceWorker' in navigator){navigator.serviceWorker.register('/sw.js');}</script>
            ${plausible}
            ${onesignal}
            <style>
              body{margin:0;background:#0b0f13;color:#e9eef4;font:16px/1.5 system-ui,-apple-system,Segoe UI,Roboto}
              header,section,footer{max-width:980px;margin:0 auto;padding:20px}
              .pill{display:inline-block;padding:6px 10px;border:1px solid #1f2a3a;border-radius:999px;margin-right:8px}
              h1{margin:10px 0 8px}
              .card{background:#11161c;border:1px solid #1f2a3a;border-radius:14px;padding:16px;margin:14px 0}
              .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:14px}
              .row.coin{display:grid;grid-template-columns:90px 1fr 90px 64px;gap:8px;padding:8px 0;border-bottom:1px dashed #223}
              .sym{font-weight:700}.p{opacity:.9}.up{color:#40e89a}.dn{color:#ff6b6b}
              .btn{background:#ff9800;color:#1a1200;padding:8px 12px;border-radius:10px;text-decoration:none;font-weight:700}
              .tag{border:1px solid #1f2a3a;padding:8px 12px;border-radius:999px;text-decoration:none;color:#9fd;display:inline-block;margin:4px}
              .pay img{width:200px;height:200px;border-radius:8px;border:1px solid #223;background:#000}
              .addr{font-family:ui-monospace,Menlo,Consolas,monospace;font-size:12px;word-break:break-all;color:#9fb3c8}
              a{color:#7dc1ff}
            </style>
          </head><body>
            <header>
              <div><span class="pill">ENS: <b>${ens}</b></span>
                   <span class="pill">Heartbeat: <span id="hb">${nowISO()}</span></span>
                   <span class="pill"><a href="/data/latest.json" target="_blank">data</a></span>
                   <span class="pill"><a href="/feed.xml" target="_blank">rss</a></span>
              </div>
              <h1>${brand}</h1>
              <div style="color:#9fb3c8">${cfg?.site?.tagline||""}</div>
            </header>

            <section class="card">
              <h3>🔥 Cơ hội nổi bật</h3>
              ${topHTML || '<div>Đang cập nhật dữ liệu…</div>'}
            </section>

            <section class="card">
              <h3>💳 Thanh toán</h3>
              <div class="grid">${payHTML}</div>
            </section>

            <section class="card">
              <h3>🤝 Affiliate</h3>
              <div>${affHTML || '<div class="addr">Đang cập nhật liên kết…</div>'}</div>
            </section>

            <footer style="text-align:center;color:#9fb3c8;padding:30px 0">© ${new Date().getFullYear()} LightUnfold • Phi tập trung & mở rộng 24/7</footer>
          </body></html>`;

          fs.writeFileSync("index.html", html);
          NODE

      - name: Commit & Push
        run: |
          git config user.name  "hypercore-bot"
          git config user.email "hypercore-bot@users.noreply.github.com"
          git add index.html manifest.webmanifest sw.js feed.xml sitemap.xml r/*.html data/*.json data/*.txt data/*.png || true
          git commit -m "hypercore: refresh $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "no changes"
          git push || true
